{"version":3,"sources":["Login.js","Registration.js","Homepage.js","FindCare.js","api_test.js","App.js","reportWebVitals.js","index.js"],"names":["Login","props","state","username","email","password","handleSubmit","bind","handleInput","e","this","setState","target","name","value","preventDefault","handleLogin","className","onSubmit","for","placeholder","type","onChange","onClick","handleNavigation","Component","Registration","password1","password2","handleRegistration","Homepage","handleLogout","FindCare","google","zoom","onMarkerClick","onClose","onInfoWindowClose","GoogleApiWrapper","apiKey","ApiTest","fetch","process","then","response","ok","Error","json","data","console","log","catch","error","App","selection","user","a","options","method","headers","Cookies","get","body","JSON","stringify","handleError","warn","set","key","alert","err","remove","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e85b257a.chunk.js","sourcesContent":["import {Component} from 'react';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password: '',\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n  handleInput(e) {\n    this.setState({ [e.target.name]: e.target.value});\n  }\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.handleLogin(this.state);\n  }\n//\n\nrender(){\n  return(\n\n    <div>\n      <form className=\"form-login p-4 mb-3 login-form-container\" onSubmit={this.handleSubmit}>\n      <h2>Login</h2>\n      <div className=\"form-group\">\n        <label for=\"InputUsername\" className=\"form-label\">Username</label>\n        <br/>\n        <input className=\"login-input\" placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"InputUsername\" className=\"form-label\">Email</label>\n        <br/>\n        <input className=\"login-input\" type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n      </div>\n      <div className=\"form-group\">\n        <label for=\"InputUsername\" className=\"form-label\">Password</label>\n        <br/>\n        <input className=\"login-input\" type=\"password\" placeholder=\"password\" name=\"password\" value={this.state.password} onChange={this.handleInput}/>\n      </div>\n        <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n        <div className=\"divider\">New here? Register!</div>\n        <button className=\"btn btn-primary toggle-register\" onClick={() => this.props.handleNavigation('register')}>Create New Account</button>\n        </form>\n    </div>\n\n  );\n}\n}\n\nexport default Login;\n//\n// <button className=\"toggle-register\" onClick={() => this.props.handleNavigation('register')}>Create New Account</button>\n","import {Component} from 'react';\n\nclass Registration extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      username: '',\n      email: '',\n      password1: '',\n      password2: '',\n    }\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleInput = this.handleInput.bind(this);\n  }\n  handleInput(e){\n    this.setState({[e.target.name]: e.target.value});\n  }\n  handleSubmit(e){\n    e.preventDefault();\n    this.props.handleRegistration(this.state);\n  }\n//\nrender(){\n  return(\n<div>\n  <form className=\"form-login p-4 mb-3 login-form-container\" onSubmit={this.handleSubmit}>\n  <h2>New User? <br/> Register!</h2>\n  <div className=\"form-group\">\n    <label for=\"InputUsername\" className=\"form-label\">Username</label>\n    <br/>\n    <input className=\"login-input\" placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n  </div>\n  <div className=\"form-group\">\n    <label for=\"InputUsername\" className=\"form-label\">Email</label>\n    <br/>\n    <input className=\"login-input\" type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n  </div>\n  <div className=\"form-group\">\n    <label for=\"InputUsername\" className=\"form-label\">Password</label>\n    <br/>\n    <input className=\"login-input\" type=\"password\" placeholder=\"password\" name=\"password1\" value={this.state.password} onChange={this.handleInput}/>\n  </div>\n  <div className=\"form-group\">\n    <label for=\"InputUsername\" className=\"form-label\">Password</label>\n    <br/>\n    <input className=\"login-input\" type=\"password\" placeholder=\"Re-enter Password\" name=\"password2\" value={this.state.password} onChange={this.handleInput}/>\n  </div>\n    <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\n    <div className=\"divider\">New here? Register!</div>\n    <button className=\"btn btn-primary toggle-register\" onClick={() => this.props.handleNavigation('register')}>Create New Account</button>\n    </form>\n</div>\n);\n}\n}\nexport default Registration;\n\n\n  //\n//   render(){\n//     return(\n//     <div>\n//       <>\n//       <form className=\"form-login\" onSubmit={this.handleSubmit}>\n//         <label className=\"login-label\">New User? <br/> Register!</label>\n//           <input className=\"login-input\" placeholder=\"username\" name=\"username\" type=\"text\" value={this.state.username} onChange={this.handleInput}/>\n//         <label></label>\n//           <input className=\"login-input\" placeholder=\"email\" name=\"email\" type=\"email\" value={this.state.email} onChange={this.handleInput}/>\n//         <label></label>\n//         <input className=\"login-input\" placeholder=\"password\" type=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n//         <label></label>\n//         <input className=\"login-input\" placeholder=\"re-type password\" type=\"password\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n//         <button className=\"submit-button\" type=\"submit\">Submit</button>\n//       </form>\n//       </>\n//     </div>\n//     );\n//   }\n// }\n// export default Registration;\n\n  // <button className=\"toggle-register\" onClick={() => this.props.handleNavigation('login') }>Current User Login</button>\n","import {Component} from 'react';\n\nclass Homepage extends Component {\n\nrender(){\n  return(\n    <div>\n    <h1>Welcome to the Homepage</h1>\n    <button className=\"submit-button\" onClick={this.props.handleLogout}>Logout</button>\n    </div>\n  )\n}\n\n}\nexport default Homepage;\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport { Loader } from \"@googlemaps/js-api-loader\"\n\nclass FindCare extends Component {\nrender(){\n  return(\n    <div className=\"map-container\">\n        <h2>Find Care:</h2>\n        <Map className=\"map\" google={this.props.google} zoom={14}>\n\n            <Marker onClick={this.onMarkerClick}\n                    name={'Current location'} />\n\n            <InfoWindow onClose={this.onInfoWindowClose}>\n\n            </InfoWindow>\n          </Map>\n    </div>\n  );\n}\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyBG242E6D2eH_Ai2RYwAiTMg2Y83P3iyXU')\n})(FindCare)\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport { Loader } from \"@googlemaps/js-api-loader\"\n\nclass ApiTest extends Component{\n\n// const API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\n\n  componentDidMount(){\n    // fetch('https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&key=AIzaSyBG242E6D2eH_Ai2RYwAiTMg2Y83P3iyXU')\n\n    fetch(`https://maps.googleapis.com/maps/api/geocode/json?address=1600+Amphitheatre+Parkway,+Mountain+View,+CA&key=${process.env.REACT_APP_GOOGLE_API_KEY}`)\n\n\n    .then(response => {\n      if (!response.ok){\n        throw new Error ('Network response was not ok');\n      }\n      return response.json();\n    })\n    .then(data => console.log('API test: ', { data })).catch(error => {\n      console.error('Problem with fetch request: ', error);\n    });\n}\n\nrender(){\n  return(\n    <div>\n    Map\n    </div>\n  );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: ('AIzaSyBG242E6D2eH_Ai2RYwAiTMg2Y83P3iyXU')\n})(ApiTest)\n","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Cookies from 'js-cookie';\n// import {Map, InfoWindow, Marker, GoogleApiWrapper} from 'google-maps-react';\nimport Login from './Login';\nimport Registration from './Registration';\nimport Homepage from './Homepage';\nimport FindCare from './FindCare';\nimport ApiTest from './api_test';\n\n// const API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\n\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n      this.state = {\n        selection: 'login'\n      }\n      this.handleLogin = this.handleLogin.bind(this);\n      this.handleLogout = this.handleLogout.bind(this);\n      this.handleRegistration = this.handleRegistration.bind(this);\n      this.handleNavigation = this.handleNavigation.bind(this);\n  }\n  handleNavigation(selection){\n    this.setState({ selection });\n  }\n\n  async handleLogin(user){\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-CSRFToken': Cookies.get('csrftoken')\n      },\n      body: JSON.stringify(user),\n    };\n    const handleError = (error) => console.warn(error);\n    const response = await fetch('/rest-auth/login/', options).catch(handleError);\n\n    if(response.ok){\n      const data = await response.json().catch(handleError);\n      Cookies.set('Authorization', `Token ${data.key}`);\n      this.setState( { selection : 'homepage' });\n    } else {\n      alert('Incorrect Username of Password, Please Try Again!')\n    }\n  }\n\nasync handleRegistration(user){\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken')\n    },\n    body: JSON.stringify(user),\n  };\n  const handleError = (error) => console.warn(error);\n  const response = await fetch('/rest-auth/registration/', options).catch(handleError);\n\n  if(response.ok){\n    const data = await response.json().catch(handleError);\n\n    Cookies.set('Authorization', `Token ${data.key}`);\n    this.setState( { selection : 'homepage' });\n  } else {\n    throw new Error('Network response was not ok');\n  }\n}\n\nasync handleLogout(){\n\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'X-CSRFToken': Cookies.get('csrftoken'),\n    },\n  };\n\n  const handleError = (err) => console.warn(err);\n  const response = await fetch('/rest-auth/logout/', options).catch(handleError);\n\nif(response.ok){\n  Cookies.remove('Authorization');\n  this.setState({ selection: 'login' });\n  }\n\n}\n\nrender(){\n  return(\n    <div className=\"main-container\">\n        <h1>My Dental Records</h1>\n        <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation} />\n        <Registration handleRegistration={this.handleRegistration} handleNavigation={this.handleNavigation}/>\n        <Homepage selection={this.state.selection} handleNavigation={this.handleNavigation} handleLogin={this.handleLogin} handleLogout={this.handleLogout} />\n        <FindCare handleNavigation={this.handleNavigation}/>\n        <ApiTest />\n    </div>\n  );\n}\n}\n\nexport default App;\n\n// export default GoogleApiWrapper({\n//   apiKey: (API_KEY)\n// })(App)\n\n\n//REACT ROUTER:\n// render (){\n//   return (\n//      <Router>\n//        <div>\n//          <nav>\n//            <ul>\n//              <li>\n//                <Link to=\"/articles\">Articles</Link>\n//              </li>\n//              <li>\n//                <Link to=\"/profile\">Profile</Link>\n//              </li>\n//              <li>\n//                <Link to=\"/login\">Login</Link>\n//              </li>\n//            </ul>\n//          </nav>\n//\n//          <Switch>\n//            <Route path=\"/profile\">\n//              <Profile />\n//            </Route>\n//            <Route path=\"/articles\">\n//              <Articles />\n//            </Route>\n//            <Route path=\"/login\">\n//              <Login handleLogin={this.handleLogin} handleNavigation={this.handleNavigation} />\n//            </Route>\n//          </Switch>\n//        </div>\n//      </Router>\n//    );\n//   }\n//\n// }\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}